<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.crm.mapper.CheckRecordMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.crm.domain.CheckRecord" >
    <id column="id" property="id" />
    <result column="checkDate" property="checkDate" />
    <result column="checkInTime" property="checkInTime" />
    <result column="checkOutTime" property="checkOutTime" />
    <result column="checkInState" property="checkInState" />
    <result column="checkOutState" property="checkOutState" />
    <result column="checkFillUp" property="checkFillUp" />
    <association property="employee" columnPrefix="employee_" javaType="Employee">
    				<id column="id" property="id"/>
    				<result column="username" property="username"/>
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey"  >
    delete from `checkrecord`
    where id = #{id}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
    insert into `checkrecord` (checkEmployeeId, checkDate, checkInTime, checkOutTime, checkInState, 
      checkOutState, checkFillUp)
    values (#{employee.id}, #{checkDate}, #{checkInTime}, #{checkOutTime}, #{checkInState}, 
      #{checkOutState}, #{checkFillUp})
  </insert>
  <update id="updateByPrimaryKey" >
    update `checkrecord`
    set checkEmployeeId = #{employee.id},
      checkDate = #{checkDate},
      checkInTime = #{checkInTime},
      checkOutTime = #{checkOutTime},
      checkInState = #{checkInState},
      checkOutState = #{checkOutState},
      checkFillUp = #{checkFillUp}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
    select checkrecord.id, checkEmployeeId, checkDate, checkInTime, checkOutTime, checkInState, checkOutState, 
    checkFillUp, employee.id as employee_id, employee.username as employee_username  
    from `checkrecord` checkrecord 
    join `Employee` employee on checkrecord.checkEmployeeId = employee.id 
    where checkrecord.id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select checkrecord.id, checkEmployeeId, checkDate, checkInTime, checkOutTime, checkInState, checkOutState, 
    checkFillUp, employee.id as employee_id, employee.username as employee_username  
    from `checkrecord` checkrecord 
    join `Employee` employee on checkrecord.checkEmployeeId = employee.id 
  </select>
  
  
  <!-- 分页 -->
  <!-- 高级查询共同的sql -->
  <sql id="baseSql">
        <where>
            <if test="keyword != null and keyword != ''">
                and employee.username like concat('%',#{keyword},'%')
            </if>
            <if test="beginDate != null">
                and checkDate >= #{beginDate}
            </if>
            <if test="endDate != null">
                and checkDate &lt;= #{endDate}
            </if>
            <if test="deptId > 0">
                and employee.dept_id = #{deptId}
            </if>
        </where>
    </sql>
  <!--查询满足条件总数-->
  <select id="queryForCount" resultType="int">
    select count(checkrecord.id) 
    from `checkrecord` checkrecord 
    join `employee` employee on checkrecord.checkEmployeeId = employee.id 
    <include refid="baseSql"/>
  </select>
  <!--查询满足条件的结果集(有内联sql查询信息)-->
  <select id="queryForList" resultMap="BaseResultMap">
    select checkrecord.id, checkEmployeeId, checkDate, checkInTime, checkOutTime, checkInState, checkOutState, 
    checkFillUp, employee.id as employee_id, employee.username as employee_username  
    from `checkrecord` checkrecord 
    join `employee` employee on checkrecord.checkEmployeeId = employee.id 
    <include refid="baseSql"/>
    limit #{beginIndex},#{rows}
  </select>
  
  
  
  <!-- 根据当前登录用户的id和考勤日期查询其签到状态 -->
  <select id="selectByEmployeeIdAndCheckDate" resultMap="BaseResultMap">
  		select checkrecord.id,checkInState, checkOutState 
  		from `checkrecord` checkrecord
  		where 
  		day(checkrecord.checkDate)=day(#{checkTime}) 
  		and month(checkrecord.checkDate)=month(#{checkTime}) 
  		and year(checkrecord.checkDate)=year(#{checkTime}) 
  		and checkrecord.checkEmployeeId = #{id}
  </select>
  <!-- 签到/下班/补签 -->
  <update id="checkIn">
  		update `checkrecord`
	    set 
	      checkInTime = #{checkInTime},
	      checkInState = #{checkInState} 
	    where id = #{id}
  </update>
  <update id="checkOut">
  		update `checkrecord`
	    set 
	      checkOutTime = #{checkOutTime},
	      checkOutState = #{checkOutState} 
	    where id = #{id}
  </update>
  <update id="checkFillUp">
  		update `checkrecord`
	    set 
	      checkInState = #{checkInState},
	      checkOutState = #{checkOutState}, 
	      checkFillUp = #{checkFillUp}
	    where id = #{id}
  </update>
</mapper>